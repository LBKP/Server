// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Login.proto

#include "Login.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace LOGIN {
class NewConnection_GLDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NewConnection_GL>
      _instance;
} _NewConnection_GL_default_instance_;
class ClientLogin_CLDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientLogin_CL>
      _instance;
} _ClientLogin_CL_default_instance_;
class LoginState_LCDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginState_LC>
      _instance;
} _LoginState_LC_default_instance_;
}  // namespace LOGIN
namespace protobuf_Login_2eproto {
static void InitDefaultsNewConnection_GL() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LOGIN::_NewConnection_GL_default_instance_;
    new (ptr) ::LOGIN::NewConnection_GL();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LOGIN::NewConnection_GL::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NewConnection_GL =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNewConnection_GL}, {}};

static void InitDefaultsClientLogin_CL() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LOGIN::_ClientLogin_CL_default_instance_;
    new (ptr) ::LOGIN::ClientLogin_CL();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LOGIN::ClientLogin_CL::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClientLogin_CL =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClientLogin_CL}, {}};

static void InitDefaultsLoginState_LC() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LOGIN::_LoginState_LC_default_instance_;
    new (ptr) ::LOGIN::LoginState_LC();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LOGIN::LoginState_LC::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginState_LC =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginState_LC}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_NewConnection_GL.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientLogin_CL.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginState_LC.base);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LOGIN::NewConnection_GL, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LOGIN::NewConnection_GL, hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LOGIN::ClientLogin_CL, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LOGIN::ClientLogin_CL, code_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LOGIN::LoginState_LC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LOGIN::LoginState_LC, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LOGIN::LoginState_LC, sessionid_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::LOGIN::NewConnection_GL)},
  { 6, -1, sizeof(::LOGIN::ClientLogin_CL)},
  { 12, -1, sizeof(::LOGIN::LoginState_LC)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::LOGIN::_NewConnection_GL_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LOGIN::_ClientLogin_CL_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LOGIN::_LoginState_LC_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Login.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013Login.proto\022\005LOGIN\" \n\020NewConnection_GL"
      "\022\014\n\004hash\030\001 \001(\005\"#\n\016ClientLogin_CL\022\021\n\tCODE"
      "_SIZE\030\001 \001(\005\"x\n\rLoginState_LC\022.\n\005state\030\001 "
      "\001(\0162\037.LOGIN.LoginState_LC.LoginState\022\021\n\t"
      "sessionId\030\002 \001(\005\"$\n\nLoginState\022\013\n\007SUCCESS"
      "\020\000\022\t\n\005ERROR\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 221);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Login.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Login_2eproto
namespace LOGIN {
const ::google::protobuf::EnumDescriptor* LoginState_LC_LoginState_descriptor() {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Login_2eproto::file_level_enum_descriptors[0];
}
bool LoginState_LC_LoginState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LoginState_LC_LoginState LoginState_LC::SUCCESS;
const LoginState_LC_LoginState LoginState_LC::ERROR;
const LoginState_LC_LoginState LoginState_LC::LoginState_MIN;
const LoginState_LC_LoginState LoginState_LC::LoginState_MAX;
const int LoginState_LC::LoginState_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void NewConnection_GL::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewConnection_GL::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewConnection_GL::NewConnection_GL()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Login_2eproto::scc_info_NewConnection_GL.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LOGIN.NewConnection_GL)
}
NewConnection_GL::NewConnection_GL(const NewConnection_GL& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_ = from.hash_;
  // @@protoc_insertion_point(copy_constructor:LOGIN.NewConnection_GL)
}

void NewConnection_GL::SharedCtor() {
  hash_ = 0;
}

NewConnection_GL::~NewConnection_GL() {
  // @@protoc_insertion_point(destructor:LOGIN.NewConnection_GL)
  SharedDtor();
}

void NewConnection_GL::SharedDtor() {
}

void NewConnection_GL::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NewConnection_GL::descriptor() {
  ::protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewConnection_GL& NewConnection_GL::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Login_2eproto::scc_info_NewConnection_GL.base);
  return *internal_default_instance();
}


void NewConnection_GL::Clear() {
// @@protoc_insertion_point(message_clear_start:LOGIN.NewConnection_GL)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hash_ = 0;
  _internal_metadata_.Clear();
}

bool NewConnection_GL::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LOGIN.NewConnection_GL)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LOGIN.NewConnection_GL)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LOGIN.NewConnection_GL)
  return false;
#undef DO_
}

void NewConnection_GL::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LOGIN.NewConnection_GL)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 hash = 1;
  if (this->hash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->hash(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LOGIN.NewConnection_GL)
}

::google::protobuf::uint8* NewConnection_GL::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LOGIN.NewConnection_GL)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 hash = 1;
  if (this->hash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->hash(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LOGIN.NewConnection_GL)
  return target;
}

size_t NewConnection_GL::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LOGIN.NewConnection_GL)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 hash = 1;
  if (this->hash() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hash());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NewConnection_GL::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LOGIN.NewConnection_GL)
  GOOGLE_DCHECK_NE(&from, this);
  const NewConnection_GL* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewConnection_GL>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LOGIN.NewConnection_GL)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LOGIN.NewConnection_GL)
    MergeFrom(*source);
  }
}

void NewConnection_GL::MergeFrom(const NewConnection_GL& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LOGIN.NewConnection_GL)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hash() != 0) {
    set_hash(from.hash());
  }
}

void NewConnection_GL::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LOGIN.NewConnection_GL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewConnection_GL::CopyFrom(const NewConnection_GL& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LOGIN.NewConnection_GL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewConnection_GL::IsInitialized() const {
  return true;
}

void NewConnection_GL::Swap(NewConnection_GL* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewConnection_GL::InternalSwap(NewConnection_GL* other) {
  using std::swap;
  swap(hash_, other->hash_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NewConnection_GL::GetMetadata() const {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientLogin_CL::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientLogin_CL::kCODESIZEFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientLogin_CL::ClientLogin_CL()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Login_2eproto::scc_info_ClientLogin_CL.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LOGIN.ClientLogin_CL)
}
ClientLogin_CL::ClientLogin_CL(const ClientLogin_CL& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_size_ = from.code_size_;
  // @@protoc_insertion_point(copy_constructor:LOGIN.ClientLogin_CL)
}

void ClientLogin_CL::SharedCtor() {
  code_size_ = 0;
}

ClientLogin_CL::~ClientLogin_CL() {
  // @@protoc_insertion_point(destructor:LOGIN.ClientLogin_CL)
  SharedDtor();
}

void ClientLogin_CL::SharedDtor() {
}

void ClientLogin_CL::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClientLogin_CL::descriptor() {
  ::protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientLogin_CL& ClientLogin_CL::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Login_2eproto::scc_info_ClientLogin_CL.base);
  return *internal_default_instance();
}


void ClientLogin_CL::Clear() {
// @@protoc_insertion_point(message_clear_start:LOGIN.ClientLogin_CL)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_size_ = 0;
  _internal_metadata_.Clear();
}

bool ClientLogin_CL::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LOGIN.ClientLogin_CL)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 CODE_SIZE = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LOGIN.ClientLogin_CL)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LOGIN.ClientLogin_CL)
  return false;
#undef DO_
}

void ClientLogin_CL::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LOGIN.ClientLogin_CL)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 CODE_SIZE = 1;
  if (this->code_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LOGIN.ClientLogin_CL)
}

::google::protobuf::uint8* ClientLogin_CL::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LOGIN.ClientLogin_CL)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 CODE_SIZE = 1;
  if (this->code_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code_size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LOGIN.ClientLogin_CL)
  return target;
}

size_t ClientLogin_CL::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LOGIN.ClientLogin_CL)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 CODE_SIZE = 1;
  if (this->code_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientLogin_CL::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LOGIN.ClientLogin_CL)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientLogin_CL* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientLogin_CL>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LOGIN.ClientLogin_CL)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LOGIN.ClientLogin_CL)
    MergeFrom(*source);
  }
}

void ClientLogin_CL::MergeFrom(const ClientLogin_CL& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LOGIN.ClientLogin_CL)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code_size() != 0) {
    set_code_size(from.code_size());
  }
}

void ClientLogin_CL::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LOGIN.ClientLogin_CL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientLogin_CL::CopyFrom(const ClientLogin_CL& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LOGIN.ClientLogin_CL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientLogin_CL::IsInitialized() const {
  return true;
}

void ClientLogin_CL::Swap(ClientLogin_CL* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientLogin_CL::InternalSwap(ClientLogin_CL* other) {
  using std::swap;
  swap(code_size_, other->code_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClientLogin_CL::GetMetadata() const {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginState_LC::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginState_LC::kStateFieldNumber;
const int LoginState_LC::kSessionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginState_LC::LoginState_LC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Login_2eproto::scc_info_LoginState_LC.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LOGIN.LoginState_LC)
}
LoginState_LC::LoginState_LC(const LoginState_LC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&state_, &from.state_,
    static_cast<size_t>(reinterpret_cast<char*>(&sessionid_) -
    reinterpret_cast<char*>(&state_)) + sizeof(sessionid_));
  // @@protoc_insertion_point(copy_constructor:LOGIN.LoginState_LC)
}

void LoginState_LC::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sessionid_) -
      reinterpret_cast<char*>(&state_)) + sizeof(sessionid_));
}

LoginState_LC::~LoginState_LC() {
  // @@protoc_insertion_point(destructor:LOGIN.LoginState_LC)
  SharedDtor();
}

void LoginState_LC::SharedDtor() {
}

void LoginState_LC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LoginState_LC::descriptor() {
  ::protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginState_LC& LoginState_LC::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Login_2eproto::scc_info_LoginState_LC.base);
  return *internal_default_instance();
}


void LoginState_LC::Clear() {
// @@protoc_insertion_point(message_clear_start:LOGIN.LoginState_LC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sessionid_) -
      reinterpret_cast<char*>(&state_)) + sizeof(sessionid_));
  _internal_metadata_.Clear();
}

bool LoginState_LC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LOGIN.LoginState_LC)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .LOGIN.LoginState_LC.LoginState state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::LOGIN::LoginState_LC_LoginState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sessionId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LOGIN.LoginState_LC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LOGIN.LoginState_LC)
  return false;
#undef DO_
}

void LoginState_LC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LOGIN.LoginState_LC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LOGIN.LoginState_LC.LoginState state = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  // int32 sessionId = 2;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sessionid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LOGIN.LoginState_LC)
}

::google::protobuf::uint8* LoginState_LC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LOGIN.LoginState_LC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LOGIN.LoginState_LC.LoginState state = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  // int32 sessionId = 2;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sessionid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LOGIN.LoginState_LC)
  return target;
}

size_t LoginState_LC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LOGIN.LoginState_LC)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .LOGIN.LoginState_LC.LoginState state = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // int32 sessionId = 2;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sessionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginState_LC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LOGIN.LoginState_LC)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginState_LC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginState_LC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LOGIN.LoginState_LC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LOGIN.LoginState_LC)
    MergeFrom(*source);
  }
}

void LoginState_LC::MergeFrom(const LoginState_LC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LOGIN.LoginState_LC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
}

void LoginState_LC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LOGIN.LoginState_LC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginState_LC::CopyFrom(const LoginState_LC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LOGIN.LoginState_LC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginState_LC::IsInitialized() const {
  return true;
}

void LoginState_LC::Swap(LoginState_LC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginState_LC::InternalSwap(LoginState_LC* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(sessionid_, other->sessionid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoginState_LC::GetMetadata() const {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace LOGIN
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LOGIN::NewConnection_GL* Arena::CreateMaybeMessage< ::LOGIN::NewConnection_GL >(Arena* arena) {
  return Arena::CreateInternal< ::LOGIN::NewConnection_GL >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LOGIN::ClientLogin_CL* Arena::CreateMaybeMessage< ::LOGIN::ClientLogin_CL >(Arena* arena) {
  return Arena::CreateInternal< ::LOGIN::ClientLogin_CL >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LOGIN::LoginState_LC* Arena::CreateMaybeMessage< ::LOGIN::LoginState_LC >(Arena* arena) {
  return Arena::CreateInternal< ::LOGIN::LoginState_LC >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
