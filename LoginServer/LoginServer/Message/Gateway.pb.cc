// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Gateway.proto

#include "Gateway.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_Gateway_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ServerAttr_Gateway_2eproto;
namespace Gateway {
class ServerAttrDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerAttr> _instance;
} _ServerAttr_default_instance_;
class ServerRegister_SGDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerRegister_SG> _instance;
} _ServerRegister_SG_default_instance_;
class ServerConnected_GSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerConnected_GS> _instance;
} _ServerConnected_GS_default_instance_;
class MessageError_GDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageError_G> _instance;
} _MessageError_G_default_instance_;
class ClientConnected_GSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientConnected_GS> _instance;
} _ClientConnected_GS_default_instance_;
class AllConnectedServer_GSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AllConnectedServer_GS> _instance;
} _AllConnectedServer_GS_default_instance_;
}  // namespace Gateway
static void InitDefaultsServerAttr_Gateway_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Gateway::_ServerAttr_default_instance_;
    new (ptr) ::Gateway::ServerAttr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Gateway::ServerAttr::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServerAttr_Gateway_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServerAttr_Gateway_2eproto}, {}};

static void InitDefaultsServerRegister_SG_Gateway_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Gateway::_ServerRegister_SG_default_instance_;
    new (ptr) ::Gateway::ServerRegister_SG();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Gateway::ServerRegister_SG::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ServerRegister_SG_Gateway_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsServerRegister_SG_Gateway_2eproto}, {
      &scc_info_ServerAttr_Gateway_2eproto.base,}};

static void InitDefaultsServerConnected_GS_Gateway_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Gateway::_ServerConnected_GS_default_instance_;
    new (ptr) ::Gateway::ServerConnected_GS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Gateway::ServerConnected_GS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ServerConnected_GS_Gateway_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsServerConnected_GS_Gateway_2eproto}, {
      &scc_info_ServerAttr_Gateway_2eproto.base,}};

static void InitDefaultsMessageError_G_Gateway_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Gateway::_MessageError_G_default_instance_;
    new (ptr) ::Gateway::MessageError_G();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Gateway::MessageError_G::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MessageError_G_Gateway_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMessageError_G_Gateway_2eproto}, {}};

static void InitDefaultsClientConnected_GS_Gateway_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Gateway::_ClientConnected_GS_default_instance_;
    new (ptr) ::Gateway::ClientConnected_GS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Gateway::ClientConnected_GS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClientConnected_GS_Gateway_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClientConnected_GS_Gateway_2eproto}, {}};

static void InitDefaultsAllConnectedServer_GS_Gateway_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Gateway::_AllConnectedServer_GS_default_instance_;
    new (ptr) ::Gateway::AllConnectedServer_GS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Gateway::AllConnectedServer_GS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AllConnectedServer_GS_Gateway_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAllConnectedServer_GS_Gateway_2eproto}, {
      &scc_info_ServerAttr_Gateway_2eproto.base,}};

void InitDefaults_Gateway_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_ServerAttr_Gateway_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerRegister_SG_Gateway_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerConnected_GS_Gateway_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MessageError_G_Gateway_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientConnected_GS_Gateway_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AllConnectedServer_GS_Gateway_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_Gateway_2eproto[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_Gateway_2eproto[2];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_Gateway_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_Gateway_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Gateway::ServerAttr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Gateway::ServerAttr, hash_),
  PROTOBUF_FIELD_OFFSET(::Gateway::ServerAttr, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Gateway::ServerRegister_SG, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Gateway::ServerRegister_SG, server_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Gateway::ServerConnected_GS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Gateway::ServerConnected_GS, server_),
  PROTOBUF_FIELD_OFFSET(::Gateway::ServerConnected_GS, connected_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Gateway::MessageError_G, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Gateway::MessageError_G, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Gateway::ClientConnected_GS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Gateway::ClientConnected_GS, hash_),
  PROTOBUF_FIELD_OFFSET(::Gateway::ClientConnected_GS, connected_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Gateway::AllConnectedServer_GS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Gateway::AllConnectedServer_GS, server_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Gateway::ServerAttr)},
  { 7, -1, sizeof(::Gateway::ServerRegister_SG)},
  { 13, -1, sizeof(::Gateway::ServerConnected_GS)},
  { 20, -1, sizeof(::Gateway::MessageError_G)},
  { 26, -1, sizeof(::Gateway::ClientConnected_GS)},
  { 33, -1, sizeof(::Gateway::AllConnectedServer_GS)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Gateway::_ServerAttr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Gateway::_ServerRegister_SG_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Gateway::_ServerConnected_GS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Gateway::_MessageError_G_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Gateway::_ClientConnected_GS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Gateway::_AllConnectedServer_GS_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_Gateway_2eproto = {
  {}, AddDescriptors_Gateway_2eproto, "Gateway.proto", schemas,
  file_default_instances, TableStruct_Gateway_2eproto::offsets,
  file_level_metadata_Gateway_2eproto, 6, file_level_enum_descriptors_Gateway_2eproto, file_level_service_descriptors_Gateway_2eproto,
};

const char descriptor_table_protodef_Gateway_2eproto[] =
  "\n\rGateway.proto\022\007Gateway\"=\n\nServerAttr\022\014"
  "\n\004hash\030\001 \001(\005\022!\n\004type\030\002 \001(\0162\023.Gateway.Ser"
  "verType\"8\n\021ServerRegister_SG\022#\n\006server\030\001"
  " \001(\0132\023.Gateway.ServerAttr\"L\n\022ServerConne"
  "cted_GS\022#\n\006server\030\001 \001(\0132\023.Gateway.Server"
  "Attr\022\021\n\tconnected\030\002 \001(\010\"\216\001\n\016MessageError"
  "_G\0220\n\005error\030\001 \001(\0162!.Gateway.MessageError"
  "_G.ErrorType\"J\n\tErrorType\022\016\n\nHASH_ERROR\020"
  "\000\022\030\n\024MESSAGE_FORMAT_ERROR\020\001\022\023\n\017CHECK_SUM"
  "_ERROR\020\002\"5\n\022ClientConnected_GS\022\014\n\004hash\030\001"
  " \001(\005\022\021\n\tconnected\030\002 \001(\010\"<\n\025AllConnectedS"
  "erver_GS\022#\n\006server\030\001 \003(\0132\023.Gateway.Serve"
  "rAttr*\"\n\nServerType\022\t\n\005LOGIN\020\000\022\t\n\005LOBBY\020"
  "\001b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_Gateway_2eproto = {
  false, InitDefaults_Gateway_2eproto, 
  descriptor_table_protodef_Gateway_2eproto,
  "Gateway.proto", &assign_descriptors_table_Gateway_2eproto, 529,
};

void AddDescriptors_Gateway_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_Gateway_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Gateway_2eproto = []() { AddDescriptors_Gateway_2eproto(); return true; }();
namespace Gateway {
const ::google::protobuf::EnumDescriptor* MessageError_G_ErrorType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_Gateway_2eproto);
  return file_level_enum_descriptors_Gateway_2eproto[0];
}
bool MessageError_G_ErrorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MessageError_G_ErrorType MessageError_G::HASH_ERROR;
const MessageError_G_ErrorType MessageError_G::MESSAGE_FORMAT_ERROR;
const MessageError_G_ErrorType MessageError_G::CHECK_SUM_ERROR;
const MessageError_G_ErrorType MessageError_G::ErrorType_MIN;
const MessageError_G_ErrorType MessageError_G::ErrorType_MAX;
const int MessageError_G::ErrorType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ServerType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_Gateway_2eproto);
  return file_level_enum_descriptors_Gateway_2eproto[1];
}
bool ServerType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ServerAttr::InitAsDefaultInstance() {
}
class ServerAttr::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerAttr::kHashFieldNumber;
const int ServerAttr::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerAttr::ServerAttr()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Gateway.ServerAttr)
}
ServerAttr::ServerAttr(const ServerAttr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hash_, &from.hash_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&hash_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:Gateway.ServerAttr)
}

void ServerAttr::SharedCtor() {
  ::memset(&hash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&hash_)) + sizeof(type_));
}

ServerAttr::~ServerAttr() {
  // @@protoc_insertion_point(destructor:Gateway.ServerAttr)
  SharedDtor();
}

void ServerAttr::SharedDtor() {
}

void ServerAttr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerAttr& ServerAttr::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ServerAttr_Gateway_2eproto.base);
  return *internal_default_instance();
}


void ServerAttr::Clear() {
// @@protoc_insertion_point(message_clear_start:Gateway.ServerAttr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&hash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&hash_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ServerAttr::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ServerAttr*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 hash = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hash(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .Gateway.ServerType type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_type(static_cast<::Gateway::ServerType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ServerAttr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Gateway.ServerAttr)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Gateway.ServerType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::Gateway::ServerType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Gateway.ServerAttr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Gateway.ServerAttr)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ServerAttr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Gateway.ServerAttr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 hash = 1;
  if (this->hash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->hash(), output);
  }

  // .Gateway.ServerType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Gateway.ServerAttr)
}

::google::protobuf::uint8* ServerAttr::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Gateway.ServerAttr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 hash = 1;
  if (this->hash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->hash(), target);
  }

  // .Gateway.ServerType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Gateway.ServerAttr)
  return target;
}

size_t ServerAttr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Gateway.ServerAttr)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 hash = 1;
  if (this->hash() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hash());
  }

  // .Gateway.ServerType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerAttr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Gateway.ServerAttr)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerAttr* source =
      ::google::protobuf::DynamicCastToGenerated<ServerAttr>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Gateway.ServerAttr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Gateway.ServerAttr)
    MergeFrom(*source);
  }
}

void ServerAttr::MergeFrom(const ServerAttr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Gateway.ServerAttr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hash() != 0) {
    set_hash(from.hash());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ServerAttr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Gateway.ServerAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerAttr::CopyFrom(const ServerAttr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Gateway.ServerAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerAttr::IsInitialized() const {
  return true;
}

void ServerAttr::Swap(ServerAttr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerAttr::InternalSwap(ServerAttr* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(hash_, other->hash_);
  swap(type_, other->type_);
}

::google::protobuf::Metadata ServerAttr::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Gateway_2eproto);
  return ::file_level_metadata_Gateway_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ServerRegister_SG::InitAsDefaultInstance() {
  ::Gateway::_ServerRegister_SG_default_instance_._instance.get_mutable()->server_ = const_cast< ::Gateway::ServerAttr*>(
      ::Gateway::ServerAttr::internal_default_instance());
}
class ServerRegister_SG::HasBitSetters {
 public:
  static const ::Gateway::ServerAttr& server(const ServerRegister_SG* msg);
};

const ::Gateway::ServerAttr&
ServerRegister_SG::HasBitSetters::server(const ServerRegister_SG* msg) {
  return *msg->server_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerRegister_SG::kServerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerRegister_SG::ServerRegister_SG()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Gateway.ServerRegister_SG)
}
ServerRegister_SG::ServerRegister_SG(const ServerRegister_SG& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_server()) {
    server_ = new ::Gateway::ServerAttr(*from.server_);
  } else {
    server_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Gateway.ServerRegister_SG)
}

void ServerRegister_SG::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ServerRegister_SG_Gateway_2eproto.base);
  server_ = nullptr;
}

ServerRegister_SG::~ServerRegister_SG() {
  // @@protoc_insertion_point(destructor:Gateway.ServerRegister_SG)
  SharedDtor();
}

void ServerRegister_SG::SharedDtor() {
  if (this != internal_default_instance()) delete server_;
}

void ServerRegister_SG::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerRegister_SG& ServerRegister_SG::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ServerRegister_SG_Gateway_2eproto.base);
  return *internal_default_instance();
}


void ServerRegister_SG::Clear() {
// @@protoc_insertion_point(message_clear_start:Gateway.ServerRegister_SG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && server_ != nullptr) {
    delete server_;
  }
  server_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ServerRegister_SG::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ServerRegister_SG*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .Gateway.ServerAttr server = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Gateway::ServerAttr::_InternalParse;
        object = msg->mutable_server();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ServerRegister_SG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Gateway.ServerRegister_SG)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Gateway.ServerAttr server = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_server()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Gateway.ServerRegister_SG)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Gateway.ServerRegister_SG)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ServerRegister_SG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Gateway.ServerRegister_SG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Gateway.ServerAttr server = 1;
  if (this->has_server()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::server(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Gateway.ServerRegister_SG)
}

::google::protobuf::uint8* ServerRegister_SG::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Gateway.ServerRegister_SG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Gateway.ServerAttr server = 1;
  if (this->has_server()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::server(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Gateway.ServerRegister_SG)
  return target;
}

size_t ServerRegister_SG::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Gateway.ServerRegister_SG)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Gateway.ServerAttr server = 1;
  if (this->has_server()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *server_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerRegister_SG::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Gateway.ServerRegister_SG)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerRegister_SG* source =
      ::google::protobuf::DynamicCastToGenerated<ServerRegister_SG>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Gateway.ServerRegister_SG)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Gateway.ServerRegister_SG)
    MergeFrom(*source);
  }
}

void ServerRegister_SG::MergeFrom(const ServerRegister_SG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Gateway.ServerRegister_SG)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_server()) {
    mutable_server()->::Gateway::ServerAttr::MergeFrom(from.server());
  }
}

void ServerRegister_SG::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Gateway.ServerRegister_SG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerRegister_SG::CopyFrom(const ServerRegister_SG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Gateway.ServerRegister_SG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerRegister_SG::IsInitialized() const {
  return true;
}

void ServerRegister_SG::Swap(ServerRegister_SG* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerRegister_SG::InternalSwap(ServerRegister_SG* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(server_, other->server_);
}

::google::protobuf::Metadata ServerRegister_SG::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Gateway_2eproto);
  return ::file_level_metadata_Gateway_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ServerConnected_GS::InitAsDefaultInstance() {
  ::Gateway::_ServerConnected_GS_default_instance_._instance.get_mutable()->server_ = const_cast< ::Gateway::ServerAttr*>(
      ::Gateway::ServerAttr::internal_default_instance());
}
class ServerConnected_GS::HasBitSetters {
 public:
  static const ::Gateway::ServerAttr& server(const ServerConnected_GS* msg);
};

const ::Gateway::ServerAttr&
ServerConnected_GS::HasBitSetters::server(const ServerConnected_GS* msg) {
  return *msg->server_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerConnected_GS::kServerFieldNumber;
const int ServerConnected_GS::kConnectedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerConnected_GS::ServerConnected_GS()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Gateway.ServerConnected_GS)
}
ServerConnected_GS::ServerConnected_GS(const ServerConnected_GS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_server()) {
    server_ = new ::Gateway::ServerAttr(*from.server_);
  } else {
    server_ = nullptr;
  }
  connected_ = from.connected_;
  // @@protoc_insertion_point(copy_constructor:Gateway.ServerConnected_GS)
}

void ServerConnected_GS::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ServerConnected_GS_Gateway_2eproto.base);
  ::memset(&server_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&connected_) -
      reinterpret_cast<char*>(&server_)) + sizeof(connected_));
}

ServerConnected_GS::~ServerConnected_GS() {
  // @@protoc_insertion_point(destructor:Gateway.ServerConnected_GS)
  SharedDtor();
}

void ServerConnected_GS::SharedDtor() {
  if (this != internal_default_instance()) delete server_;
}

void ServerConnected_GS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerConnected_GS& ServerConnected_GS::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ServerConnected_GS_Gateway_2eproto.base);
  return *internal_default_instance();
}


void ServerConnected_GS::Clear() {
// @@protoc_insertion_point(message_clear_start:Gateway.ServerConnected_GS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && server_ != nullptr) {
    delete server_;
  }
  server_ = nullptr;
  connected_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ServerConnected_GS::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ServerConnected_GS*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .Gateway.ServerAttr server = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Gateway::ServerAttr::_InternalParse;
        object = msg->mutable_server();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bool connected = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_connected(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ServerConnected_GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Gateway.ServerConnected_GS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Gateway.ServerAttr server = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_server()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool connected = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &connected_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Gateway.ServerConnected_GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Gateway.ServerConnected_GS)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ServerConnected_GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Gateway.ServerConnected_GS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Gateway.ServerAttr server = 1;
  if (this->has_server()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::server(this), output);
  }

  // bool connected = 2;
  if (this->connected() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->connected(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Gateway.ServerConnected_GS)
}

::google::protobuf::uint8* ServerConnected_GS::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Gateway.ServerConnected_GS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Gateway.ServerAttr server = 1;
  if (this->has_server()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::server(this), target);
  }

  // bool connected = 2;
  if (this->connected() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->connected(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Gateway.ServerConnected_GS)
  return target;
}

size_t ServerConnected_GS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Gateway.ServerConnected_GS)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Gateway.ServerAttr server = 1;
  if (this->has_server()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *server_);
  }

  // bool connected = 2;
  if (this->connected() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerConnected_GS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Gateway.ServerConnected_GS)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerConnected_GS* source =
      ::google::protobuf::DynamicCastToGenerated<ServerConnected_GS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Gateway.ServerConnected_GS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Gateway.ServerConnected_GS)
    MergeFrom(*source);
  }
}

void ServerConnected_GS::MergeFrom(const ServerConnected_GS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Gateway.ServerConnected_GS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_server()) {
    mutable_server()->::Gateway::ServerAttr::MergeFrom(from.server());
  }
  if (from.connected() != 0) {
    set_connected(from.connected());
  }
}

void ServerConnected_GS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Gateway.ServerConnected_GS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerConnected_GS::CopyFrom(const ServerConnected_GS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Gateway.ServerConnected_GS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerConnected_GS::IsInitialized() const {
  return true;
}

void ServerConnected_GS::Swap(ServerConnected_GS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerConnected_GS::InternalSwap(ServerConnected_GS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(server_, other->server_);
  swap(connected_, other->connected_);
}

::google::protobuf::Metadata ServerConnected_GS::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Gateway_2eproto);
  return ::file_level_metadata_Gateway_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MessageError_G::InitAsDefaultInstance() {
}
class MessageError_G::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageError_G::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageError_G::MessageError_G()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Gateway.MessageError_G)
}
MessageError_G::MessageError_G(const MessageError_G& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_ = from.error_;
  // @@protoc_insertion_point(copy_constructor:Gateway.MessageError_G)
}

void MessageError_G::SharedCtor() {
  error_ = 0;
}

MessageError_G::~MessageError_G() {
  // @@protoc_insertion_point(destructor:Gateway.MessageError_G)
  SharedDtor();
}

void MessageError_G::SharedDtor() {
}

void MessageError_G::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MessageError_G& MessageError_G::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MessageError_G_Gateway_2eproto.base);
  return *internal_default_instance();
}


void MessageError_G::Clear() {
// @@protoc_insertion_point(message_clear_start:Gateway.MessageError_G)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MessageError_G::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MessageError_G*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .Gateway.MessageError_G.ErrorType error = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_error(static_cast<::Gateway::MessageError_G_ErrorType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MessageError_G::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Gateway.MessageError_G)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Gateway.MessageError_G.ErrorType error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_error(static_cast< ::Gateway::MessageError_G_ErrorType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Gateway.MessageError_G)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Gateway.MessageError_G)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MessageError_G::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Gateway.MessageError_G)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Gateway.MessageError_G.ErrorType error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Gateway.MessageError_G)
}

::google::protobuf::uint8* MessageError_G::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Gateway.MessageError_G)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Gateway.MessageError_G.ErrorType error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Gateway.MessageError_G)
  return target;
}

size_t MessageError_G::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Gateway.MessageError_G)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Gateway.MessageError_G.ErrorType error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageError_G::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Gateway.MessageError_G)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageError_G* source =
      ::google::protobuf::DynamicCastToGenerated<MessageError_G>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Gateway.MessageError_G)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Gateway.MessageError_G)
    MergeFrom(*source);
  }
}

void MessageError_G::MergeFrom(const MessageError_G& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Gateway.MessageError_G)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error() != 0) {
    set_error(from.error());
  }
}

void MessageError_G::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Gateway.MessageError_G)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageError_G::CopyFrom(const MessageError_G& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Gateway.MessageError_G)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageError_G::IsInitialized() const {
  return true;
}

void MessageError_G::Swap(MessageError_G* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageError_G::InternalSwap(MessageError_G* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(error_, other->error_);
}

::google::protobuf::Metadata MessageError_G::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Gateway_2eproto);
  return ::file_level_metadata_Gateway_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ClientConnected_GS::InitAsDefaultInstance() {
}
class ClientConnected_GS::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientConnected_GS::kHashFieldNumber;
const int ClientConnected_GS::kConnectedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientConnected_GS::ClientConnected_GS()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Gateway.ClientConnected_GS)
}
ClientConnected_GS::ClientConnected_GS(const ClientConnected_GS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hash_, &from.hash_,
    static_cast<size_t>(reinterpret_cast<char*>(&connected_) -
    reinterpret_cast<char*>(&hash_)) + sizeof(connected_));
  // @@protoc_insertion_point(copy_constructor:Gateway.ClientConnected_GS)
}

void ClientConnected_GS::SharedCtor() {
  ::memset(&hash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&connected_) -
      reinterpret_cast<char*>(&hash_)) + sizeof(connected_));
}

ClientConnected_GS::~ClientConnected_GS() {
  // @@protoc_insertion_point(destructor:Gateway.ClientConnected_GS)
  SharedDtor();
}

void ClientConnected_GS::SharedDtor() {
}

void ClientConnected_GS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientConnected_GS& ClientConnected_GS::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ClientConnected_GS_Gateway_2eproto.base);
  return *internal_default_instance();
}


void ClientConnected_GS::Clear() {
// @@protoc_insertion_point(message_clear_start:Gateway.ClientConnected_GS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&hash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&connected_) -
      reinterpret_cast<char*>(&hash_)) + sizeof(connected_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClientConnected_GS::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ClientConnected_GS*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 hash = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hash(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool connected = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_connected(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClientConnected_GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Gateway.ClientConnected_GS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool connected = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &connected_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Gateway.ClientConnected_GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Gateway.ClientConnected_GS)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClientConnected_GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Gateway.ClientConnected_GS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 hash = 1;
  if (this->hash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->hash(), output);
  }

  // bool connected = 2;
  if (this->connected() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->connected(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Gateway.ClientConnected_GS)
}

::google::protobuf::uint8* ClientConnected_GS::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Gateway.ClientConnected_GS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 hash = 1;
  if (this->hash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->hash(), target);
  }

  // bool connected = 2;
  if (this->connected() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->connected(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Gateway.ClientConnected_GS)
  return target;
}

size_t ClientConnected_GS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Gateway.ClientConnected_GS)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 hash = 1;
  if (this->hash() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hash());
  }

  // bool connected = 2;
  if (this->connected() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientConnected_GS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Gateway.ClientConnected_GS)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientConnected_GS* source =
      ::google::protobuf::DynamicCastToGenerated<ClientConnected_GS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Gateway.ClientConnected_GS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Gateway.ClientConnected_GS)
    MergeFrom(*source);
  }
}

void ClientConnected_GS::MergeFrom(const ClientConnected_GS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Gateway.ClientConnected_GS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hash() != 0) {
    set_hash(from.hash());
  }
  if (from.connected() != 0) {
    set_connected(from.connected());
  }
}

void ClientConnected_GS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Gateway.ClientConnected_GS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientConnected_GS::CopyFrom(const ClientConnected_GS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Gateway.ClientConnected_GS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientConnected_GS::IsInitialized() const {
  return true;
}

void ClientConnected_GS::Swap(ClientConnected_GS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientConnected_GS::InternalSwap(ClientConnected_GS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(hash_, other->hash_);
  swap(connected_, other->connected_);
}

::google::protobuf::Metadata ClientConnected_GS::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Gateway_2eproto);
  return ::file_level_metadata_Gateway_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AllConnectedServer_GS::InitAsDefaultInstance() {
}
class AllConnectedServer_GS::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllConnectedServer_GS::kServerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllConnectedServer_GS::AllConnectedServer_GS()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Gateway.AllConnectedServer_GS)
}
AllConnectedServer_GS::AllConnectedServer_GS(const AllConnectedServer_GS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      server_(from.server_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Gateway.AllConnectedServer_GS)
}

void AllConnectedServer_GS::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AllConnectedServer_GS_Gateway_2eproto.base);
}

AllConnectedServer_GS::~AllConnectedServer_GS() {
  // @@protoc_insertion_point(destructor:Gateway.AllConnectedServer_GS)
  SharedDtor();
}

void AllConnectedServer_GS::SharedDtor() {
}

void AllConnectedServer_GS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AllConnectedServer_GS& AllConnectedServer_GS::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AllConnectedServer_GS_Gateway_2eproto.base);
  return *internal_default_instance();
}


void AllConnectedServer_GS::Clear() {
// @@protoc_insertion_point(message_clear_start:Gateway.AllConnectedServer_GS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AllConnectedServer_GS::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AllConnectedServer_GS*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .Gateway.ServerAttr server = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::Gateway::ServerAttr::_InternalParse;
          object = msg->add_server();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AllConnectedServer_GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Gateway.AllConnectedServer_GS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Gateway.ServerAttr server = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_server()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Gateway.AllConnectedServer_GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Gateway.AllConnectedServer_GS)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AllConnectedServer_GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Gateway.AllConnectedServer_GS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Gateway.ServerAttr server = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->server_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->server(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Gateway.AllConnectedServer_GS)
}

::google::protobuf::uint8* AllConnectedServer_GS::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Gateway.AllConnectedServer_GS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Gateway.ServerAttr server = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->server_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->server(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Gateway.AllConnectedServer_GS)
  return target;
}

size_t AllConnectedServer_GS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Gateway.AllConnectedServer_GS)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Gateway.ServerAttr server = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->server_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->server(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AllConnectedServer_GS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Gateway.AllConnectedServer_GS)
  GOOGLE_DCHECK_NE(&from, this);
  const AllConnectedServer_GS* source =
      ::google::protobuf::DynamicCastToGenerated<AllConnectedServer_GS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Gateway.AllConnectedServer_GS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Gateway.AllConnectedServer_GS)
    MergeFrom(*source);
  }
}

void AllConnectedServer_GS::MergeFrom(const AllConnectedServer_GS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Gateway.AllConnectedServer_GS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  server_.MergeFrom(from.server_);
}

void AllConnectedServer_GS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Gateway.AllConnectedServer_GS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllConnectedServer_GS::CopyFrom(const AllConnectedServer_GS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Gateway.AllConnectedServer_GS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllConnectedServer_GS::IsInitialized() const {
  return true;
}

void AllConnectedServer_GS::Swap(AllConnectedServer_GS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllConnectedServer_GS::InternalSwap(AllConnectedServer_GS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&server_)->InternalSwap(CastToBase(&other->server_));
}

::google::protobuf::Metadata AllConnectedServer_GS::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Gateway_2eproto);
  return ::file_level_metadata_Gateway_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Gateway
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::Gateway::ServerAttr* Arena::CreateMaybeMessage< ::Gateway::ServerAttr >(Arena* arena) {
  return Arena::CreateInternal< ::Gateway::ServerAttr >(arena);
}
template<> PROTOBUF_NOINLINE ::Gateway::ServerRegister_SG* Arena::CreateMaybeMessage< ::Gateway::ServerRegister_SG >(Arena* arena) {
  return Arena::CreateInternal< ::Gateway::ServerRegister_SG >(arena);
}
template<> PROTOBUF_NOINLINE ::Gateway::ServerConnected_GS* Arena::CreateMaybeMessage< ::Gateway::ServerConnected_GS >(Arena* arena) {
  return Arena::CreateInternal< ::Gateway::ServerConnected_GS >(arena);
}
template<> PROTOBUF_NOINLINE ::Gateway::MessageError_G* Arena::CreateMaybeMessage< ::Gateway::MessageError_G >(Arena* arena) {
  return Arena::CreateInternal< ::Gateway::MessageError_G >(arena);
}
template<> PROTOBUF_NOINLINE ::Gateway::ClientConnected_GS* Arena::CreateMaybeMessage< ::Gateway::ClientConnected_GS >(Arena* arena) {
  return Arena::CreateInternal< ::Gateway::ClientConnected_GS >(arena);
}
template<> PROTOBUF_NOINLINE ::Gateway::AllConnectedServer_GS* Arena::CreateMaybeMessage< ::Gateway::AllConnectedServer_GS >(Arena* arena) {
  return Arena::CreateInternal< ::Gateway::AllConnectedServer_GS >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
