// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Login.proto

#include "Login.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace Login {
class ClientNeedLogin_LCDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientNeedLogin_LC>
      _instance;
} _ClientNeedLogin_LC_default_instance_;
class ClientLogin_CLDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientLogin_CL>
      _instance;
} _ClientLogin_CL_default_instance_;
class LoginState_LCDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginState_LC>
      _instance;
} _LoginState_LC_default_instance_;
}  // namespace Login
namespace protobuf_Login_2eproto {
static void InitDefaultsClientNeedLogin_LC() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Login::_ClientNeedLogin_LC_default_instance_;
    new (ptr) ::Login::ClientNeedLogin_LC();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Login::ClientNeedLogin_LC::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClientNeedLogin_LC =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClientNeedLogin_LC}, {}};

static void InitDefaultsClientLogin_CL() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Login::_ClientLogin_CL_default_instance_;
    new (ptr) ::Login::ClientLogin_CL();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Login::ClientLogin_CL::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClientLogin_CL =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClientLogin_CL}, {}};

static void InitDefaultsLoginState_LC() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Login::_LoginState_LC_default_instance_;
    new (ptr) ::Login::LoginState_LC();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Login::LoginState_LC::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginState_LC =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginState_LC}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ClientNeedLogin_LC.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientLogin_CL.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginState_LC.base);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Login::ClientNeedLogin_LC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Login::ClientLogin_CL, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Login::ClientLogin_CL, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Login::ClientLogin_CL, sessionid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Login::LoginState_LC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Login::LoginState_LC, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Login::LoginState_LC, sessionid_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Login::ClientNeedLogin_LC)},
  { 5, -1, sizeof(::Login::ClientLogin_CL)},
  { 12, -1, sizeof(::Login::LoginState_LC)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Login::_ClientNeedLogin_LC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Login::_ClientLogin_CL_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Login::_LoginState_LC_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Login.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013Login.proto\022\005Login\"\024\n\022ClientNeedLogin_"
      "LC\"1\n\016ClientLogin_CL\022\014\n\004Code\030\001 \001(\t\022\021\n\tSe"
      "ssionId\030\002 \001(\t\"\240\001\n\rLoginState_LC\022.\n\005State"
      "\030\001 \001(\0162\037.Login.LoginState_LC.LoginState\022"
      "\021\n\tSessionId\030\002 \001(\005\"L\n\nLoginState\022\013\n\007SUCC"
      "ESS\020\000\022\016\n\nCODE_ERROR\020\001\022\016\n\nBUSY_ERROR\020\002\022\021\n"
      "\rSESSION_ERROR\020\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 264);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Login.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Login_2eproto
namespace Login {
const ::google::protobuf::EnumDescriptor* LoginState_LC_LoginState_descriptor() {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Login_2eproto::file_level_enum_descriptors[0];
}
bool LoginState_LC_LoginState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LoginState_LC_LoginState LoginState_LC::SUCCESS;
const LoginState_LC_LoginState LoginState_LC::CODE_ERROR;
const LoginState_LC_LoginState LoginState_LC::BUSY_ERROR;
const LoginState_LC_LoginState LoginState_LC::SESSION_ERROR;
const LoginState_LC_LoginState LoginState_LC::LoginState_MIN;
const LoginState_LC_LoginState LoginState_LC::LoginState_MAX;
const int LoginState_LC::LoginState_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ClientNeedLogin_LC::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientNeedLogin_LC::ClientNeedLogin_LC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Login_2eproto::scc_info_ClientNeedLogin_LC.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Login.ClientNeedLogin_LC)
}
ClientNeedLogin_LC::ClientNeedLogin_LC(const ClientNeedLogin_LC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Login.ClientNeedLogin_LC)
}

void ClientNeedLogin_LC::SharedCtor() {
}

ClientNeedLogin_LC::~ClientNeedLogin_LC() {
  // @@protoc_insertion_point(destructor:Login.ClientNeedLogin_LC)
  SharedDtor();
}

void ClientNeedLogin_LC::SharedDtor() {
}

void ClientNeedLogin_LC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClientNeedLogin_LC::descriptor() {
  ::protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientNeedLogin_LC& ClientNeedLogin_LC::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Login_2eproto::scc_info_ClientNeedLogin_LC.base);
  return *internal_default_instance();
}


void ClientNeedLogin_LC::Clear() {
// @@protoc_insertion_point(message_clear_start:Login.ClientNeedLogin_LC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ClientNeedLogin_LC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Login.ClientNeedLogin_LC)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Login.ClientNeedLogin_LC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Login.ClientNeedLogin_LC)
  return false;
#undef DO_
}

void ClientNeedLogin_LC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Login.ClientNeedLogin_LC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Login.ClientNeedLogin_LC)
}

::google::protobuf::uint8* ClientNeedLogin_LC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Login.ClientNeedLogin_LC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Login.ClientNeedLogin_LC)
  return target;
}

size_t ClientNeedLogin_LC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Login.ClientNeedLogin_LC)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientNeedLogin_LC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Login.ClientNeedLogin_LC)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientNeedLogin_LC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientNeedLogin_LC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Login.ClientNeedLogin_LC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Login.ClientNeedLogin_LC)
    MergeFrom(*source);
  }
}

void ClientNeedLogin_LC::MergeFrom(const ClientNeedLogin_LC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Login.ClientNeedLogin_LC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ClientNeedLogin_LC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Login.ClientNeedLogin_LC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientNeedLogin_LC::CopyFrom(const ClientNeedLogin_LC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Login.ClientNeedLogin_LC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientNeedLogin_LC::IsInitialized() const {
  return true;
}

void ClientNeedLogin_LC::Swap(ClientNeedLogin_LC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientNeedLogin_LC::InternalSwap(ClientNeedLogin_LC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClientNeedLogin_LC::GetMetadata() const {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientLogin_CL::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientLogin_CL::kCodeFieldNumber;
const int ClientLogin_CL::kSessionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientLogin_CL::ClientLogin_CL()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Login_2eproto::scc_info_ClientLogin_CL.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Login.ClientLogin_CL)
}
ClientLogin_CL::ClientLogin_CL(const ClientLogin_CL& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sessionid().size() > 0) {
    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  // @@protoc_insertion_point(copy_constructor:Login.ClientLogin_CL)
}

void ClientLogin_CL::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ClientLogin_CL::~ClientLogin_CL() {
  // @@protoc_insertion_point(destructor:Login.ClientLogin_CL)
  SharedDtor();
}

void ClientLogin_CL::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientLogin_CL::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClientLogin_CL::descriptor() {
  ::protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientLogin_CL& ClientLogin_CL::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Login_2eproto::scc_info_ClientLogin_CL.base);
  return *internal_default_instance();
}


void ClientLogin_CL::Clear() {
// @@protoc_insertion_point(message_clear_start:Login.ClientLogin_CL)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ClientLogin_CL::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Login.ClientLogin_CL)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Login.ClientLogin_CL.Code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SessionId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sessionid().data(), static_cast<int>(this->sessionid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Login.ClientLogin_CL.SessionId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Login.ClientLogin_CL)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Login.ClientLogin_CL)
  return false;
#undef DO_
}

void ClientLogin_CL::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Login.ClientLogin_CL)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Login.ClientLogin_CL.Code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->code(), output);
  }

  // string SessionId = 2;
  if (this->sessionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessionid().data(), static_cast<int>(this->sessionid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Login.ClientLogin_CL.SessionId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sessionid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Login.ClientLogin_CL)
}

::google::protobuf::uint8* ClientLogin_CL::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Login.ClientLogin_CL)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Login.ClientLogin_CL.Code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->code(), target);
  }

  // string SessionId = 2;
  if (this->sessionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessionid().data(), static_cast<int>(this->sessionid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Login.ClientLogin_CL.SessionId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sessionid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Login.ClientLogin_CL)
  return target;
}

size_t ClientLogin_CL::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Login.ClientLogin_CL)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Code = 1;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // string SessionId = 2;
  if (this->sessionid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientLogin_CL::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Login.ClientLogin_CL)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientLogin_CL* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientLogin_CL>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Login.ClientLogin_CL)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Login.ClientLogin_CL)
    MergeFrom(*source);
  }
}

void ClientLogin_CL::MergeFrom(const ClientLogin_CL& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Login.ClientLogin_CL)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.sessionid().size() > 0) {

    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
}

void ClientLogin_CL::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Login.ClientLogin_CL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientLogin_CL::CopyFrom(const ClientLogin_CL& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Login.ClientLogin_CL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientLogin_CL::IsInitialized() const {
  return true;
}

void ClientLogin_CL::Swap(ClientLogin_CL* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientLogin_CL::InternalSwap(ClientLogin_CL* other) {
  using std::swap;
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sessionid_.Swap(&other->sessionid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClientLogin_CL::GetMetadata() const {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginState_LC::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginState_LC::kStateFieldNumber;
const int LoginState_LC::kSessionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginState_LC::LoginState_LC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Login_2eproto::scc_info_LoginState_LC.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Login.LoginState_LC)
}
LoginState_LC::LoginState_LC(const LoginState_LC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&state_, &from.state_,
    static_cast<size_t>(reinterpret_cast<char*>(&sessionid_) -
    reinterpret_cast<char*>(&state_)) + sizeof(sessionid_));
  // @@protoc_insertion_point(copy_constructor:Login.LoginState_LC)
}

void LoginState_LC::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sessionid_) -
      reinterpret_cast<char*>(&state_)) + sizeof(sessionid_));
}

LoginState_LC::~LoginState_LC() {
  // @@protoc_insertion_point(destructor:Login.LoginState_LC)
  SharedDtor();
}

void LoginState_LC::SharedDtor() {
}

void LoginState_LC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LoginState_LC::descriptor() {
  ::protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginState_LC& LoginState_LC::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Login_2eproto::scc_info_LoginState_LC.base);
  return *internal_default_instance();
}


void LoginState_LC::Clear() {
// @@protoc_insertion_point(message_clear_start:Login.LoginState_LC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sessionid_) -
      reinterpret_cast<char*>(&state_)) + sizeof(sessionid_));
  _internal_metadata_.Clear();
}

bool LoginState_LC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Login.LoginState_LC)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Login.LoginState_LC.LoginState State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::Login::LoginState_LC_LoginState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SessionId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Login.LoginState_LC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Login.LoginState_LC)
  return false;
#undef DO_
}

void LoginState_LC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Login.LoginState_LC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Login.LoginState_LC.LoginState State = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  // int32 SessionId = 2;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sessionid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Login.LoginState_LC)
}

::google::protobuf::uint8* LoginState_LC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Login.LoginState_LC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Login.LoginState_LC.LoginState State = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  // int32 SessionId = 2;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sessionid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Login.LoginState_LC)
  return target;
}

size_t LoginState_LC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Login.LoginState_LC)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Login.LoginState_LC.LoginState State = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // int32 SessionId = 2;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sessionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginState_LC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Login.LoginState_LC)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginState_LC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginState_LC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Login.LoginState_LC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Login.LoginState_LC)
    MergeFrom(*source);
  }
}

void LoginState_LC::MergeFrom(const LoginState_LC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Login.LoginState_LC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
}

void LoginState_LC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Login.LoginState_LC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginState_LC::CopyFrom(const LoginState_LC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Login.LoginState_LC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginState_LC::IsInitialized() const {
  return true;
}

void LoginState_LC::Swap(LoginState_LC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginState_LC::InternalSwap(LoginState_LC* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(sessionid_, other->sessionid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoginState_LC::GetMetadata() const {
  protobuf_Login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Login
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Login::ClientNeedLogin_LC* Arena::CreateMaybeMessage< ::Login::ClientNeedLogin_LC >(Arena* arena) {
  return Arena::CreateInternal< ::Login::ClientNeedLogin_LC >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Login::ClientLogin_CL* Arena::CreateMaybeMessage< ::Login::ClientLogin_CL >(Arena* arena) {
  return Arena::CreateInternal< ::Login::ClientLogin_CL >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Login::LoginState_LC* Arena::CreateMaybeMessage< ::Login::LoginState_LC >(Arena* arena) {
  return Arena::CreateInternal< ::Login::LoginState_LC >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
